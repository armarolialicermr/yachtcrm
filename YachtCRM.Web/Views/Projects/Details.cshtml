@model YachtCRM.Domain.Project
@{
  ViewData["Title"] = "Project Details";
}

<div class="card shadow-sm mt-3">
  <div class="card-body">
    <h5 class="card-title">Quick Add</h5>

    <form asp-action="QuickAddInteraction" method="post" class="row g-2">
      @Html.AntiForgeryToken()
      <input type="hidden" name="id" value="@Model.ProjectID" />
      <div class="col-md-3"><input name="type" class="form-control" placeholder="Type (Meeting)" /></div>
      <div class="col-md-6"><input name="notes" class="form-control" placeholder="Notes" /></div>
      <div class="col-md-3"><button class="btn btn-outline-primary w-100">Add Interaction</button></div>
    </form>

    <form asp-action="QuickAddChange" method="post" class="row g-2 mt-2">
      @Html.AntiForgeryToken()
      <input type="hidden" name="id" value="@Model.ProjectID" />
      <div class="col-md-5"><input name="title" class="form-control" placeholder="Change title" /></div>
      <div class="col-md-3"><input name="daysImpact" type="number" class="form-control" placeholder="Days +" /></div>
      <div class="col-md-2"><input name="costImpact" type="number" step="0.01" class="form-control" placeholder="€ +" /></div>
      <div class="col-md-2"><button class="btn btn-outline-warning w-100">Add Change</button></div>
    </form>
  </div>
</div>

<div class="row g-4 mt-1">
  <!-- LEFT -->
  <div class="col-lg-8">
    <div class="card shadow-sm">
      <div class="card-body">
        <h3 class="card-title">@Model.Name</h3>
        <p class="text-muted">
          Customer: <strong>@(Model.Customer?.Name ?? "-")</strong> —
          Model: <strong>@(Model.YachtModel?.ModelName ?? "-")</strong>
        </p>
        <dl class="row">
          <dt class="col-sm-3">Planned</dt><dd class="col-sm-9">@Model.PlannedStart:d → @Model.PlannedEnd:d</dd>
          <dt class="col-sm-3">Actual</dt><dd class="col-sm-9">@Model.ActualStart?.ToString("d") ?? "-" → @Model.ActualEnd?.ToString("d") ?? "-"</dd>
          <dt class="col-sm-3">Total Price</dt><dd class="col-sm-9">@Model.TotalPrice.ToString("C")</dd>
          <dt class="col-sm-3">Status</dt><dd class="col-sm-9"><span class="badge bg-info">@Model.Status</span></dd>
        </dl>
        <hr />
        <h5>Predicted Delay</h5>
        <div id="predBox" class="alert alert-secondary">Loading prediction…</div>
      </div>
    </div>

    <div class="card shadow-sm mt-3">
      <div class="card-body">
        <h5 class="card-title">Length vs Tasks (demo chart)</h5>
        <canvas id="scatterChart"></canvas>
      </div>
    </div>

    <div class="card shadow-sm mt-3">
      <div class="card-body">
        <h5 class="card-title">Change Requests (@Model.ChangeRequests.Count)</h5>
        @if (!Model.ChangeRequests.Any()) {
          <p class="text-muted mb-0">No change requests yet.</p>
        } else {
          <ul class="list-group list-group-flush">
            @foreach (var c in Model.ChangeRequests.OrderByDescending(x => x.ApprovedOn).Take(10))
            {
              <li class="list-group-item d-flex justify-content-between align-items-center">
                <span class="text-truncate" style="max-width:70%;">@c.Title</span>
                <a class="btn btn-sm btn-outline-primary" asp-controller="ChangeRequests" asp-action="Details" asp-route-id="@c.ChangeRequestID">Open</a>
              </li>
            }
          </ul>
        }
        <a class="btn btn-success mt-3" asp-controller="ChangeRequests" asp-action="Create" asp-route-projectId="@Model.ProjectID">+ New Change Request</a>
      </div>
    </div>

    <h4 class="mt-4">Service Requests</h4>
    <p>
      <a class="btn btn-sm btn-success" asp-controller="ServiceRequests" asp-action="Create" asp-route-projectId="@Model.ProjectID">+ New Service Request</a>
      <a class="btn btn-sm btn-outline-primary" asp-controller="ServiceRequests" asp-action="Index" asp-route-projectId="@Model.ProjectID">View All</a>
    </p>
    @if (Model.ServiceRequests != null && Model.ServiceRequests.Any())
    {
      <table class="table table-sm">
        <thead><tr><th>ID</th><th>Title</th><th>Status</th><th>Requested</th><th></th></tr></thead>
        <tbody>
        @foreach (var s in Model.ServiceRequests.OrderByDescending(x => x.ServiceRequestID).Take(5))
        {
          <tr>
            <td>@s.ServiceRequestID</td>
            <td>@s.Title</td>
            <td><span class="badge bg-secondary">@s.Status</span></td>
            <td>@s.RequestDate.ToLocalTime()</td>
            <td><a class="btn btn-sm btn-primary" asp-controller="ServiceRequests" asp-action="Details" asp-route-id="@s.ServiceRequestID">Open</a></td>
          </tr>
        }
        </tbody>
      </table>
    }
    else
    {
      <p class="text-muted">No service requests yet.</p>
    }

    <h4 class="mt-4">Customer Feedback</h4>
    <p>
      <a class="btn btn-sm btn-success" asp-controller="Feedback" asp-action="Create"
         asp-route-projectId="@Model.ProjectID" asp-route-customerId="@Model.CustomerID">+ New Feedback</a>
      <a class="btn btn-sm btn-outline-primary" asp-controller="Feedback" asp-action="Index" asp-route-projectId="@Model.ProjectID">View All</a>
    </p>

    @if (ViewBag.LatestFeedback is IEnumerable<YachtCRM.Domain.CustomerFeedback> fb && fb.Any())
    {
      <table class="table table-sm">
        <thead><tr><th>ID</th><th>Score</th><th>Submitted</th><th>Comments</th><th></th></tr></thead>
        <tbody>
        @foreach (var f in fb)
        {
          <tr>
            <td>@f.CustomerFeedbackID</td>
            <td><span class="badge @(f.Score>=9 ? "bg-success" : f.Score>=7 ? "bg-warning" : "bg-danger")">@f.Score</span></td>
            <td>@f.SubmittedOn.ToLocalTime()</td>
            <td class="text-truncate" style="max-width:400px;">@f.Comments</td>
            <td><a class="btn btn-sm btn-primary" asp-controller="Feedback" asp-action="Details" asp-route-id="@f.CustomerFeedbackID">Open</a></td>
          </tr>
        }
        </tbody>
      </table>
    }
    else
    {
      <p class="text-muted">No feedback captured yet.</p>
    }
  </div>

  <!-- RIGHT -->
  <div class="col-lg-4">
    <div class="card shadow-sm">
      <div class="card-body">
        <h5 class="card-title">Summary</h5>
        <ul class="list-unstyled mb-0">
          <li>Tasks: <strong>@Model.Tasks.Count</strong></li>
          <li>Change Requests: <strong>@Model.ChangeRequests.Count</strong></li>
          <li>Interactions: <strong>@Model.Interactions.Count</strong></li>
        </ul>
      </div>
    </div>
  </div>
</div>

@section Scripts {
<script>
fetch(`/projects/@Model.ProjectID/prediction`)
  .then(r => r.json())
  .then(d => {
    const days = d.predictedDelayDays ?? 0;
    const el = document.getElementById('predBox');
    el.classList.remove('alert-secondary');
    el.classList.add(days > 45 ? 'alert-danger' : days > 20 ? 'alert-warning' : 'alert-success');
    el.innerText = `Estimated Delay: ${days.toFixed(1)} days`;
  })
  .catch(_ => {
    const el = document.getElementById('predBox');
    el.classList.add('alert-danger');
    el.innerText = 'Prediction failed.';
  });

const ctx = document.getElementById('scatterChart');
new Chart(ctx, {
  type: 'scatter',
  data: { datasets: [{ label: 'This Project', data: [{ x: @(Model.YachtModel?.Length ?? 0), y: @Model.Tasks.Count }] }] },
  options: { scales: { x: { title: { display: true, text: 'Length (m)' } }, y: { title: { display: true, text: '# Tasks' } } } }
});
</script>
}



