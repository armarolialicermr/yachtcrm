services:
  - type: web                       # This is a web service (a web app or API)
    name: yachtcrm                   # Name of the service on Render (shown in dashboard)
    env: docker                      # Render uses Docker to build & run the app; we'll use dotnet publish
    plan: free                       # Free plan so no cost during development/testing
    repo: https://github.com/<YOUR-ACCOUNT>/<YOUR-REPO>  # Link to your GitHub repo (update this!)
    
    # --- Build instructions ---
    buildCommand: |                  # Commands executed during the build phase
      dotnet restore                 # Restores NuGet dependencies
      dotnet publish YachtCRM.Web/YachtCRM.Web.csproj -c Release -o out
                                     # Builds & publishes the app to the 'out' folder in Release mode

    # --- Start instructions ---
    startCommand: |                  # Commands executed to start the app
      cd out && ASPNETCORE_URLS=http://0.0.0.0:$PORT dotnet YachtCRM.Web.dll
                                     # Run the app, binding to the correct port Render provides

    envVars:                         # Environment variables for configuration
      # Override the default database connection string (here we use SQLite)
      - key: ConnectionStrings__DefaultConnection
        value: Data Source=app.db

      # Set the environment to Production (important for ASP.NET Core)
      - key: ASPNETCORE_ENVIRONMENT
        value: Production

      # Optional: seed the database with sample data on first run if empty
      - key: SEED_ON_BOOT
        value: "500"                 # Example: create 500 sample rows automatically
